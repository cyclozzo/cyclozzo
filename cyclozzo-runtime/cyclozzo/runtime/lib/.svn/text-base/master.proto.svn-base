message MST_Error
{
	required int32 error_code = 1;
	optional string error_message = 2;
}

message MST_Answer
{
	required int32 op_code = 1;
	optional string op_out = 2;
	
	optional MST_Error error = 99;
}

message MST_Connect
{
	required string ip_address = 1;
	required int32 version = 2;
	
	optional string host_name = 3;
}

message MST_ConnectResult
{
	optional string app_name = 1;	
	optional string thrift_address = 2;
	optional int32 thrift_port = 3;
	optional string token = 4;
	
	optional MST_Error error = 99;
}

message MST_EnumPlugins
{
	required string token = 1;
}

message MST_PluginOption
{
	required string name = 1;
	required string description = 2;
	required string type = 3;
	required string data = 4;
	
	repeated string variants = 5;
}

message MST_Plugin
{
	required string plugin_id = 1;
	required string plugin_type = 2;
	required string plugin_class = 3;
	
	required int32 options_count = 4;
	repeated MST_PluginOption option = 5;
}

message MST_EnumPluginsResult
{
	required int32 plugins_count = 1;
	repeated MST_Plugin plugin = 2;
	
	optional MST_Error error = 99;
}

message MST_DeployRole
{
	required string token = 1;
	required string server_key = 2;
	required string role_key = 3;
	required string user_key = 4;
	
	required int32 options_count = 5;
	repeated MST_PluginOption options = 6;
}

message MST_ActivityResult
{
	required int32 op_code = 1;
	optional string activity_key = 2;

	optional MST_Error error = 99;
}

message MST_CancelActivity
{
	required string token = 1;
	
	required string act_key = 2;
	required string user_key = 3;
	required int32 code = 4;
	required string reason = 5;
}

message MST_CancelActivityResult
{
	required int32 op_code = 1;
	optional string activity_key = 2;

	optional MST_Error error = 99;
}

message MST_ClusterOperation
{
	enum MST_CommandType {
		START		= 0;
		STOP		= 1;
		SET_READONLY	= 2;
		SET_READWRITE	= 3;
		APPLY_CONFIG	= 4;
		FORMAT		= 5;
		STATUS		= 6;
	  }
	
	required string token = 1;
	required string cloud_key = 2;
	
	required MST_CommandType command = 3;
}

message MST_GetActivityProcessLogRequest
{
	required string token = 1;
	required string act_key = 2;
}

message MST_ActivityProcessLog
{	
	required int32 op_code = 1;
	repeated string lines = 2;
	optional MST_Error error = 99;
}

message MST_ApiStats
{
	required string token = 1;
	required string app_key = 2;
	required string server_key = 3;
	required int32 inst_port = 4;
	required int32 timer_delta = 5;

	optional int32 datastore_api = 6;
	optional int32 datastore_query = 7;
	optional int32 datastore_sent = 8;
	optional int32 datastore_received = 9;

	optional int32 mail_api = 10;
	optional int32 mail_sent = 11;
	optional int32 mail_sent_owners = 12;
	optional int32 mail_body_bytes = 13;
	optional int32 mail_attach = 14;
	optional int32 mail_attach_bytes = 15;

	optional int32 urlfetch_api = 16;
	optional int32 urlfetch_sent_bytes = 17;
	optional int32 urlfetch_received_bytes = 18;
	
}

message MST_ApiStatsResponse
{
	required int32 quota_exceeded = 1;
	optional string quota_name = 2;
	optional int32 quota_overuse = 3;
	
	optional MST_Error error = 99;
}

message MST_ReceiveApp
{
	required string token = 1;
	required int32 file_size = 2;
	required string app_name = 3;
	required int32 app_revision = 4;
}

message MST_StatApp
{
	required string token = 1;
	required string app_name = 2;
	required int32 app_revision = 3;
}

message MST_ReceiveAppResult
{
	optional int32 receive_port = 1;
	optional MST_Error error = 99;
}

message MST_AppStartNotification
{
	required string token = 1;
	
	required int32 code = 2;
	required string message = 3;
	
	required string app_name = 4;
	required int32 app_revision = 5;
	required string server_key = 6;
	required int32 port = 7;
}

message MST_AppStopNotification
{
	required string token = 1;
	
	required int32 code = 2;
	required string message = 3;
	
	required string app_name = 4;
	required int32 app_revision = 5;
	required int32 app_port = 6;
	required string server_key = 7;
}

message MST_AppStopBalancer
{
	required string token = 1;
	
	required string app_name = 4;
	required int32 app_revision = 5;
	required int32 app_port = 6;
	required string server_key = 7;
}

message MST_Authenticate
{
	required string token = 1;
	required string user_id = 2;
	required string password_hash = 3;
	required string app_id = 4;
}

message MST_AuthResult
{
	required int32 op_code = 1;
	required bool authenticated = 2;
	required bool admin = 3;
	required string email = 4;
	required string message = 5;
	
	optional MST_Error error = 99;
}

message MST_AppLog
{
	required string token = 1;
	required string app_key = 2;
	required int32 app_port = 3;
	required string server_key = 4;

	repeated int32 timestamps = 5;
	repeated string messages = 6;
	repeated int32 codes = 7;
}

message MST_AppDisableQuotaRequest
{
	required string token = 1;
	required string app_key = 2;
	required int32 enable_after = 3;
	required string quota_name = 4;
}

message MST_AppDisableQuotaResponse
{
	required int32 timeout = 1;
	optional MST_Error error = 99;
}

service Cyclozzo_Master
{
	rpc connect(MST_Connect)returns(MST_ConnectResult);
	rpc cluster_operation(MST_ClusterOperation)returns(MST_ActivityResult);
	
	rpc enum_plugins(MST_EnumPlugins)returns(MST_EnumPluginsResult);
	
	rpc deploy_role(MST_DeployRole)returns(MST_ActivityResult);
	rpc get_activity_proc_log(MST_GetActivityProcessLogRequest)returns(MST_ActivityProcessLog);
	rpc cancel_activity(MST_CancelActivity)returns(MST_CancelActivityResult);
	
	rpc report_api_stats(MST_ApiStats)returns(MST_ApiStatsResponse);
	rpc authenticate(MST_Authenticate)returns(MST_AuthResult);
	
	rpc receive_app(MST_ReceiveApp)returns(MST_ReceiveAppResult);
	rpc is_app_available(MST_StatApp)returns(MST_Answer);
	
	rpc notify_app_started(MST_AppStartNotification)returns(MST_Answer);
	rpc notify_app_stopped(MST_AppStopNotification)returns(MST_Answer);
	rpc stop_app_balancer(MST_AppStopBalancer)returns(MST_Answer);
	
	rpc report_app_log(MST_AppLog)returns(MST_Answer);
	
	rpc disable_app_quota(MST_AppDisableQuotaRequest)returns(MST_AppDisableQuotaResponse);
}
